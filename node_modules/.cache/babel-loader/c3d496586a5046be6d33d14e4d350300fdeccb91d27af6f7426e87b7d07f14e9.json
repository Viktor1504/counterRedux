{"ast":null,"code":"var _jsxFileName = \"/Users/victordenisevich/it-incubator/learn_react/counter/src/componets/Counter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button } from './Button';\nimport '../App.css';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Counter = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [startValue, setStartValue] = useState(0);\n  const [maxValue, setMaxValue] = useState(5);\n  const [showSettings, setShowSettings] = useState(false);\n  useEffect(() => {\n    const savedStartValue = localStorage.getItem('startValue');\n    const savedMaxValue = localStorage.getItem('maxValue');\n    if (savedStartValue !== null && savedMaxValue !== null) {\n      setStartValue(Number(savedStartValue));\n      setMaxValue(Number(savedMaxValue));\n    }\n  }, []);\n  const onClickAddCounter = () => {\n    setCount(count < maxValue ? count + 1 : count);\n  };\n  const onClickResetCounter = () => {\n    setCount(startValue < 0 ? 0 : startValue);\n  };\n  const onChangeStartInputHandler = e => {\n    setStartValue(+e.currentTarget.value);\n  };\n  const onChangeMaxInputHandler = e => {\n    setMaxValue(+e.currentTarget.value);\n  };\n  const onClickSettingsHandler = () => {\n    setShowSettings(!showSettings);\n    setCount(startValue < 0 ? 0 : startValue);\n  };\n  const disableState = startValue === maxValue || maxValue < 0 || startValue < 0 || startValue > maxValue;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'main',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'mainDisplay',\n      children: showSettings ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          className: maxValue < 0 || startValue === maxValue ? 'inputMistake' : '',\n          title: 'max value:',\n          stateValue: maxValue,\n          onChange: onChangeMaxInputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: startValue < 0 || startValue > maxValue || startValue === maxValue ? 'inputMistake' : '',\n          title: 'start value:',\n          stateValue: startValue,\n          onChange: onChangeStartInputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: count === maxValue ? 'redSpan' : '',\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'buttons',\n      children: showSettings ? /*#__PURE__*/_jsxDEV(Button, {\n        title: 'set',\n        btnClick: onClickSettingsHandler,\n        disabled: disableState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          title: 'inc',\n          btnClick: onClickAddCounter,\n          disabled: count === maxValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: 'reset',\n          btnClick: onClickResetCounter,\n          disabled: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: 'set',\n          btnClick: onClickSettingsHandler,\n          disabled: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n};\n_s(Counter, \"xNvBuX5GR/SYJXmjS0SDJxRbN28=\");\n_c = Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useEffect","useState","Button","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","Counter","_s","count","setCount","startValue","setStartValue","maxValue","setMaxValue","showSettings","setShowSettings","savedStartValue","localStorage","getItem","savedMaxValue","Number","onClickAddCounter","onClickResetCounter","onChangeStartInputHandler","e","currentTarget","value","onChangeMaxInputHandler","onClickSettingsHandler","disableState","className","children","title","stateValue","onChange","fileName","_jsxFileName","lineNumber","columnNumber","btnClick","disabled","_c","$RefreshReg$"],"sources":["/Users/victordenisevich/it-incubator/learn_react/counter/src/componets/Counter.tsx"],"sourcesContent":["import React, {ChangeEvent, useEffect, useState} from 'react';\nimport {Button} from './Button';\nimport '../App.css';\nimport Input from './Input';\n\nexport const Counter = () => {\n    const [count, setCount] = useState<number>(0)\n    const [startValue, setStartValue] = useState<number>(0)\n    const [maxValue, setMaxValue] = useState<number>(5)\n    const [showSettings, setShowSettings] = useState<boolean>(false)\n\n    useEffect(() => {\n        const savedStartValue = localStorage.getItem('startValue');\n        const savedMaxValue = localStorage.getItem('maxValue');\n\n        if (savedStartValue !== null && savedMaxValue !== null) {\n            setStartValue(Number(savedStartValue));\n            setMaxValue(Number(savedMaxValue));\n        }\n    }, []);\n\n    const onClickAddCounter = () => {\n        setCount(count < maxValue ? count + 1 : count);\n    }\n    const onClickResetCounter = () => {\n        setCount(startValue < 0 ? 0 : startValue);\n    }\n    const onChangeStartInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setStartValue(+e.currentTarget.value)\n    }\n\n    const onChangeMaxInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setMaxValue(+e.currentTarget.value)\n    }\n\n    const onClickSettingsHandler = () => {\n        setShowSettings(!showSettings)\n        setCount(startValue < 0 ? 0 : startValue)\n    }\n\n    const disableState = startValue === maxValue || maxValue < 0 || startValue < 0 || startValue > maxValue\n\n\n    return <div className={'main'}>\n        <div className={'mainDisplay'}>\n            {showSettings ? <>\n                    <Input className={maxValue < 0 || startValue === maxValue ? 'inputMistake' : ''}\n                           title={'max value:'}\n                           stateValue={maxValue}\n                           onChange={onChangeMaxInputHandler}/>\n\n                    <Input\n                        className={startValue < 0 || startValue > maxValue || startValue === maxValue ? 'inputMistake' : ''}\n                        title={'start value:'}\n                        stateValue={startValue}\n                        onChange={onChangeStartInputHandler}/>\n                </> :\n                <span className={count === maxValue ? 'redSpan' : ''}>{count}</span>\n            }\n        </div>\n        <div className={'buttons'}>\n            {showSettings ?\n                <Button title={'set'} btnClick={onClickSettingsHandler} disabled={disableState}/>\n                :\n                <>\n                    <Button title={'inc'} btnClick={onClickAddCounter} disabled={count === maxValue}/>\n                    <Button title={'reset'} btnClick={onClickResetCounter} disabled={false}/>\n                    <Button title={'set'} btnClick={onClickSettingsHandler} disabled={false}/>\n                </>\n            }\n        </div>\n    </div>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}