{"ast":null,"code":"var _jsxFileName = \"/Users/victordenisevich/it-incubator/learn_react/counter/src/componets/SettingsCounter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from './Button';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SettingsCounter = props => {\n  _s();\n  const [startValue, setStartValue] = useState(0);\n  const [maxValue, setMaxValue] = useState(0);\n  const changeInputMaxHandler = e => {\n    if (setMaxValue) {\n      setMaxValue(+e.currentTarget.value);\n      props.onUpdateSettings(startValue, maxValue);\n    }\n  };\n  const changeInputStartHandler = e => {\n    if (setStartValue) {\n      setStartValue(+e.currentTarget.value);\n    }\n  };\n  const btnSetHandler = () => {\n    if (props.setCount) {\n      props.setCount(startValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'main',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'settings',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"max value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              value: maxValue,\n              type: 'number',\n              onChange: changeInputMaxHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"start value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: startValue < 0 ? 'inputMistake' : '',\n              value: startValue,\n              type: 'number',\n              onChange: changeInputStartHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'buttons',\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        title: 'Set',\n        btnClick: btnSetHandler,\n        disabled: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(SettingsCounter, \"iKj52KAjyxE0RFdRBE+qRr5kh90=\");\n_c = SettingsCounter;\nvar _c;\n$RefreshReg$(_c, \"SettingsCounter\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","SettingsCounter","props","_s","startValue","setStartValue","maxValue","setMaxValue","changeInputMaxHandler","e","currentTarget","value","onUpdateSettings","changeInputStartHandler","btnSetHandler","setCount","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","title","btnClick","disabled","_c","$RefreshReg$"],"sources":["/Users/victordenisevich/it-incubator/learn_react/counter/src/componets/SettingsCounter.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport {Button} from './Button';\nimport '../App.css';\n\nexport type SettingsCounterPropsType = {\n    count: number\n    setCount: (value: number) => void\n    onUpdateSettings: (startValue: number, maxValue: number) => void\n}\n\nexport const SettingsCounter = (props: SettingsCounterPropsType) => {\n\n    const [startValue, setStartValue] = useState<number>(0)\n    const [maxValue, setMaxValue] = useState<number>(0)\n\n    const changeInputMaxHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if (setMaxValue) {\n            setMaxValue(+e.currentTarget.value)\n            props.onUpdateSettings(startValue, maxValue);\n        }\n    }\n\n    const changeInputStartHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if (setStartValue) {\n            setStartValue(+e.currentTarget.value);\n        }\n    }\n\n    const btnSetHandler = () => {\n        if (props.setCount) {\n            props.setCount(startValue)\n        }\n    }\n\n    return (\n        <div className={'main'}>\n            <div className={'settings'}>\n                <div>\n                    <div>\n                        <label>\n                            max value:\n                            <input\n                                value={maxValue}\n                                type={'number'}\n                                onChange={changeInputMaxHandler}\n                            />\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            start value:\n                            <input\n                                className={startValue < 0 ? 'inputMistake' : ''}\n                                value={startValue}\n                                type={'number'}\n                                onChange={changeInputStartHandler}\n                            />\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div className={'buttons'}>\n                <Button title={'Set'} btnClick={btnSetHandler} disabled={false}/>\n            </div>\n        </div>\n    );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}