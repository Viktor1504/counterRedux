{"ast":null,"code":"var _jsxFileName = \"/Users/victordenisevich/it-incubator/learn_react/counter/src/componets/SettingsCounter.tsx\";\nimport React from 'react';\nimport Button from './Button';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsCounter = ({\n  setCount,\n  setStartValue,\n  startValue\n}) => {\n  const changeInputMaxHandler = e => {\n    // setMaxValue(e.currentTarget.value)\n  };\n  const changeInputStartHandler = e => {\n    if (setStartValue) {\n      setStartValue(Number(e.currentTarget.value));\n    }\n  };\n  const btnSetHandler = () => {\n    if (setCount) {\n      setCount(startValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'main',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'settings',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"max value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              // value={maxValue}\n              type: 'number',\n              onChange: changeInputMaxHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"start value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              value: startValue,\n              type: 'number',\n              onChange: changeInputStartHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'buttons',\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        title: 'Set',\n        btnClick: btnSetHandler,\n        disabled: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_c = SettingsCounter;\nexport default SettingsCounter;\nvar _c;\n$RefreshReg$(_c, \"SettingsCounter\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","SettingsCounter","setCount","setStartValue","startValue","changeInputMaxHandler","e","changeInputStartHandler","Number","currentTarget","value","btnSetHandler","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","title","btnClick","disabled","_c","$RefreshReg$"],"sources":["/Users/victordenisevich/it-incubator/learn_react/counter/src/componets/SettingsCounter.tsx"],"sourcesContent":["import React, {ChangeEvent} from 'react';\nimport Button from './Button';\nimport '../App.css';\n\nexport type CounterPropsType = {\n    startValue?: number\n    setStartValue?: (value: number) => void\n    count?: number\n    setCount?: (value: number | undefined) => void\n}\n\nconst SettingsCounter = ({setCount, setStartValue, startValue}: CounterPropsType) => {\n    const changeInputMaxHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        // setMaxValue(e.currentTarget.value)\n    }\n\n    const changeInputStartHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if (setStartValue) {\n            setStartValue(Number(e.currentTarget.value));\n        }\n    }\n\n    const btnSetHandler = () => {\n        if (setCount) {\n            setCount(startValue)\n        }\n\n    }\n\n    return (\n        <div className={'main'}>\n            <div className={'settings'}>\n                <div>\n                    <div>\n                        <label>\n                            max value:\n                            <input\n                                // value={maxValue}\n                                type={'number'}\n                                onChange={changeInputMaxHandler}\n                            />\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            start value:\n                            <input\n                                value={startValue}\n                                type={'number'}\n                                onChange={changeInputStartHandler}\n                            />\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div className={'buttons'}>\n                <Button title={'Set'} btnClick={btnSetHandler} disabled={false}/>\n            </div>\n        </div>\n    );\n};\n\nexport default SettingsCounter;"],"mappings":";AAAA,OAAOA,KAAK,MAAqB,OAAO;AACxC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASpB,MAAMC,eAAe,GAAGA,CAAC;EAACC,QAAQ;EAAEC,aAAa;EAAEC;AAA4B,CAAC,KAAK;EACjF,MAAMC,qBAAqB,GAAIC,CAAgC,IAAK;IAChE;EAAA,CACH;EAED,MAAMC,uBAAuB,GAAID,CAAgC,IAAK;IAClE,IAAIH,aAAa,EAAE;MACfA,aAAa,CAACK,MAAM,CAACF,CAAC,CAACG,aAAa,CAACC,KAAK,CAAC,CAAC;IAChD;EACJ,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIT,QAAQ,EAAE;MACVA,QAAQ,CAACE,UAAU,CAAC;IACxB;EAEJ,CAAC;EAED,oBACIJ,OAAA;IAAKY,SAAS,EAAE,MAAO;IAAAC,QAAA,gBACnBb,OAAA;MAAKY,SAAS,EAAE,UAAW;MAAAC,QAAA,eACvBb,OAAA;QAAAa,QAAA,gBACIb,OAAA;UAAAa,QAAA,eACIb,OAAA;YAAAa,QAAA,GAAO,YAEH,eAAAb,OAAA;cACI;cACAc,IAAI,EAAE,QAAS;cACfC,QAAQ,EAAEV;YAAsB;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACNnB,OAAA;UAAAa,QAAA,eACIb,OAAA;YAAAa,QAAA,GAAO,cAEH,eAAAb,OAAA;cACIU,KAAK,EAAEN,UAAW;cAClBU,IAAI,EAAE,QAAS;cACfC,QAAQ,EAAER;YAAwB;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNnB,OAAA;MAAKY,SAAS,EAAE,SAAU;MAAAC,QAAA,eACtBb,OAAA,CAACF,MAAM;QAACsB,KAAK,EAAE,KAAM;QAACC,QAAQ,EAAEV,aAAc;QAACW,QAAQ,EAAE;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACI,EAAA,GAjDItB,eAAe;AAmDrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}