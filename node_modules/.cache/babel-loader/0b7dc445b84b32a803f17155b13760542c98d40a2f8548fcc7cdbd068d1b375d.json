{"ast":null,"code":"const initialState = {\n  count: 0,\n  startValue: 0,\n  maxValue: 5,\n  showSettings: false\n};\n\n// type InitialStateType = typeof initialState;\n\nexport const counterReducer = (state = initialState, action) => {\n  const {\n    count,\n    startValue,\n    maxValue,\n    showSettings\n  } = state;\n  switch (action.type) {\n    case 'ADD-COUNTER':\n      {\n        return count < maxValue ? {\n          ...state,\n          count: state.count + 1\n        } : {\n          ...state\n        };\n      }\n    case 'RESET-COUNTER':\n      {\n        return startValue < 0 ? {\n          ...state,\n          count: 0\n        } : {\n          ...state,\n          count: startValue\n        };\n      }\n    case 'CHANGE-START-INPUT':\n      {\n        return state;\n      }\n    default:\n      return state;\n  }\n};\nexport const addCounterAC = () => {\n  return {\n    type: 'ADD-COUNTER'\n  };\n};\nexport const resetCounterAC = () => {\n  return {\n    type: 'RESET-COUNTER'\n  };\n};\nexport const changeStartInputHandlerAC = text => {\n  return {\n    type: 'CHANGE-START-INPUT',\n    payload: {\n      text\n    }\n  };\n};","map":{"version":3,"names":["initialState","count","startValue","maxValue","showSettings","counterReducer","state","action","type","addCounterAC","resetCounterAC","changeStartInputHandlerAC","text","payload"],"sources":["/Users/victordenisevich/it-incubator/HW-React/counterRedux/src/state/counterReducer.ts"],"sourcesContent":["export type InitialStateType = {\n    count: number\n    startValue: number\n    maxValue: number\n    showSettings: boolean\n}\n\nconst initialState: InitialStateType = {\n    count: 0,\n    startValue: 0,\n    maxValue: 5,\n    showSettings: false\n}\n\n// type InitialStateType = typeof initialState;\n\nexport const counterReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\n    const {count, startValue, maxValue, showSettings} = state\n    switch (action.type) {\n        case 'ADD-COUNTER': {\n            return (count < maxValue) ? {...state, count: state.count + 1} : {...state}\n        }\n        case 'RESET-COUNTER': {\n            return (startValue < 0) ? {...state, count: 0} : {...state, count: startValue}\n        }\n        case 'CHANGE-START-INPUT': {\n            return state\n        }\n        default:\n            return state\n    }\n}\n\ntype ActionsTypes =\n    ReturnType<typeof addCounterAC>\n    | ReturnType<typeof resetCounterAC>\n    | ReturnType<typeof changeStartInputHandlerAC>\n\nexport const addCounterAC = () => {\n    return {type: 'ADD-COUNTER'} as const\n}\nexport const resetCounterAC = () => {\n    return {type: 'RESET-COUNTER'} as const\n}\nexport const changeStartInputHandlerAC = (text: string) => {\n    return {type: 'CHANGE-START-INPUT', payload: {text}} as const\n}\n"],"mappings":"AAOA,MAAMA,YAA8B,GAAG;EACnCC,KAAK,EAAE,CAAC;EACRC,UAAU,EAAE,CAAC;EACbC,QAAQ,EAAE,CAAC;EACXC,YAAY,EAAE;AAClB,CAAC;;AAED;;AAEA,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAuB,GAAGN,YAAY,EAAEO,MAAoB,KAAuB;EAC9G,MAAM;IAACN,KAAK;IAAEC,UAAU;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGE,KAAK;EACzD,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK,aAAa;MAAE;QAChB,OAAQP,KAAK,GAAGE,QAAQ,GAAI;UAAC,GAAGG,KAAK;UAAEL,KAAK,EAAEK,KAAK,CAACL,KAAK,GAAG;QAAC,CAAC,GAAG;UAAC,GAAGK;QAAK,CAAC;MAC/E;IACA,KAAK,eAAe;MAAE;QAClB,OAAQJ,UAAU,GAAG,CAAC,GAAI;UAAC,GAAGI,KAAK;UAAEL,KAAK,EAAE;QAAC,CAAC,GAAG;UAAC,GAAGK,KAAK;UAAEL,KAAK,EAAEC;QAAU,CAAC;MAClF;IACA,KAAK,oBAAoB;MAAE;QACvB,OAAOI,KAAK;MAChB;IACA;MACI,OAAOA,KAAK;EACpB;AACJ,CAAC;AAOD,OAAO,MAAMG,YAAY,GAAGA,CAAA,KAAM;EAC9B,OAAO;IAACD,IAAI,EAAE;EAAa,CAAC;AAChC,CAAC;AACD,OAAO,MAAME,cAAc,GAAGA,CAAA,KAAM;EAChC,OAAO;IAACF,IAAI,EAAE;EAAe,CAAC;AAClC,CAAC;AACD,OAAO,MAAMG,yBAAyB,GAAIC,IAAY,IAAK;EACvD,OAAO;IAACJ,IAAI,EAAE,oBAAoB;IAAEK,OAAO,EAAE;MAACD;IAAI;EAAC,CAAC;AACxD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}